public class Main {
    public static void main(String[] args) {
        // Домашнее задание 12.
        System.out.println("Домашнее задание 12.");

        task1();
        task2();
        task3();
    }

    private static void task1() {
        // Задача 1.
        //Реализуйте метод, который получает в качестве параметра год, а затем проверяет, является ли он високосным,
        //и выводит результат в консоль. *Эту проверку вы уже реализовывали в задании по условным операторам.*
        //Теперь проверку нужно обернуть в метод и использовать год, который приходит в виде параметра. Результат
        //программы выведите в консоль. Если год високосный, то должно быть выведено “*номер года* — високосный год”.
        //Если год не високосный, то, соответственно: “*номер года* — не високосный год”.
        //*Подсказку с выполнением задания вы можете найти в шпаргалке урока.*
        System.out.println("Задача 1.");
        int year = 2058;
        boolean yearIsLeap = IsLeap(year);
        printIsLeapYearResult(year, yearIsLeap);
    }

    static boolean IsLeap(int year) {
        return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
    }

    static void printIsLeapYearResult(int year, boolean yearIsLeap) {
        if (yearIsLeap) {
            System.out.println(year + " год является високосным");
        } else {
            System.out.println(year + " год не является високосным");
        }
    }

    private static void task2() {
        // Задача 2.
        //Вспомним, задание 2 по условным операторам, где нам необходимо было предложить пользователю облегченную версию
        //приложения (см. текст прошлого задания). Напишите метод, куда подаются два параметра: тип операционной системы
        //(ОС) (0 — iOS или 1 — Android) и год выпуска устройства. Если устройство старше текущего года, предложите ему
        //установить lite-версию (облегченную версию). Текущий год можно получить таким способом:
        //   int currentYear = LocalDate.now().getYear();
        //Или самим задать значение вручную, введя в переменную числовое значение. В результате программа должна выводить
        //в консоль в зависимости от исходных данных, какую версию приложения (обычную или lite) и для какой ОС
        //(Android или iOS) нужно установить пользователю. Подсказку для выполнения вы можете найти в шпаргалке урока.
        System.out.println("Задача 2.");
        int os = 0;
        int year = 2020;
        System.out.println(printClientOS(os, deviceYear(year)));
    }

    static boolean deviceYear(int year) {
        if (year >= 2015) {
            return true;
        }
        return false;
    }

    static String printClientOS(int os, boolean deviceYear) {
        return "Установите" + (deviceYear ? "" : " облеченную") + " версию приложения для" + (os == 0 ? " IOS" : " Android") + " по ссылке";
    }

    private static void task3() {
        // Задача 3.
        //Возвращаемся к любимой многими задаче на расчет дней доставки банковской карты от банка.
        //Текст прошлого задания: Вернемся к делам банковским. У нас хороший банк, поэтому для наших клиентов мы
        //организуем доставку банковских карт на дом с четкой датой доставки. Чтобы известить клиента о том, когда будет
        //доставлена его карта, нам нужно знать расстояние от нашего офиса до адреса доставки. Правила доставки такие:
        //    Доставка в пределах 20 км занимает сутки.
        //    Доставка в пределах от 20 км до 60 км добавляет еще один день доставки.
        //    Доставка в пределах 60 км до 100 км добавляет еще одни сутки.
        //То есть с каждым следующим интервалом доставки срок увеличивается на 1 день. Напишите программу, которая выдает
        //сообщение в консоль:
        //    "Потребуется дней: " + срок доставки
        //Объявите целочисленную переменную deliveryDistance = 95, которая содержит дистанцию до клиента.
        //Наша задача — доработать код, а именно написать метод, который на вход принимает дистанцию и возвращает
        //итоговое количество дней доставки.
        System.out.println("Задача 3.");
        int distance = 95;
        int deliveryDayR = calculateDay(distance);
        System.out.println("Потребуется дней: " + deliveryDayR);
    }

    static int calculateDay(int distance) {
        int deliveryDay = 1;
        if (distance > 20) {
            deliveryDay++;
        }
        if (distance > 60) {
            deliveryDay++;
        }
        return deliveryDay;
    }
}